resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
- name: email
  type: docker-image
  source:
    repository: pcfseceng/email-resource

resources:
- name: state
  type: git
  source:
    uri: https://private.example.com/pcfplatform/your-company
    branch: master
    username: ((gitlab_username))
    password: ((gitlab_token))
    skip_ssl_verification: true

- name: ops-manager
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ops-manager
    product_version: ((opsman_product_version))

- name: om-cli
  type: github-release
  source:
    user: pivotal-cf
    repository: om
    access_token: ((git_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: jq
  type: github-release
  source:
    user: stedolan
    repository: jq
    access_token: ((git_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: platform-automation-tasks
  type: git
  source:
    uri: https://private.example.com/pcfplatform/your-company
    username: ((gitlab_username))
    password: ((gitlab_token))
    skip_ssl_verification: true

- name: platform-automation-image
  type: docker-image
  source:
    repository: private.example.com:5005/pcfplatform/your-company/platform-automation-image
    tag: 1.1.0
    username: ((gitlab_username))
    password: ((gitlab_token))
    ca_certs:
    - domain: private.example.com:5005
      cert: |
        -----BEGIN CERTIFICATE-----
        YOUR CERT
        HERE
        -----END CERTIFICATE-----

- name: platform-buildbox
  type: docker-image
  source:
    repository: private.example.com:5005/pcfplatform/your-company/np-buildbox
    username: ((gitlab_username))
    password: ((gitlab_token))
    ca_certs:
    - domain: private.example.com:5005
      cert: |
        -----BEGIN CERTIFICATE-----
        YOUR CERT
        HERE
        -----END CERTIFICATE-----

- name: send-email
  type: email
  source:
    smtp:
      host: ((smtp_address))
      port: ((smtp_port))
      anonymous: true
    from: ((from_pcf_address))
    to: [((to_addresses))]

jobs:
- name: upgrade-ops-manager
  plan:
  - aggregate:
    - get: platform-automation-tasks
    - get: platform-automation-image
    - get: platform-buildbox
    - get: state
    - get: jq
      params:
        globs:
        - "*linux64*"
    - get: pivnet-product
      resource: ops-manager
      params:
        globs:
        - "*.ova"
      trigger: true

  - put: send-email
    params:
      subject_text: "Pipeline started for ${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME}"
      body_text: "Pipeline started for: ${ATC_EXTERNAL_URL}/teams/sandbox/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"

  - task: create-opsman-env-file
    image: platform-buildbox
    file: platform-automation-tasks/sandbox/tasks/create-yml-file/task.yml
    output_mapping:
      output-folder: env
    params:
      DEBUG: ((debug))
      OUTPUT_FILE_NAME: opsman-env.yml
      PARAM_NAME: ((ops_manager_env))

  - task: create-opsman-import-file
    image: platform-buildbox
    file: platform-automation-tasks/sandbox/tasks/create-yml-file/task.yml
    output_mapping:
      output-folder: config
    params:
      DEBUG: ((debug))
      OUTPUT_FILE_NAME: ((opsman_output_file))
      PARAM_NAME: ((ops_manager_settings))

  - task: export-opsman-installation
    image: platform-automation-image
    file: platform-automation-tasks/sandbox/tasks/export-installation.yml
    input_mapping:
      env: env
    params:
      ENV_FILE: opsman-env.yml

  - task: upgrade-opsman
    image: platform-automation-image
    file: platform-automation-tasks/sandbox/tasks/upgrade-opsman.yml
    input_mapping:
      env: env
      config: config
      image: pivnet-product
      installation: installation
      state: state
    params:
      OPSMAN_CONFIG_FILE: opsman.yml
      INSTALLATION_FILE: installation.zip
      STATE_FILE: {{state_file}}
      ENV_FILE: opsman-env.yml

  - task: update-ldap-certfile
    image: platform-buildbox
    file: platform-automation-tasks/sandbox/tasks/update-ldap-cert/task.yml
    output_mapping:
      output-folder: env
    params:
      DEBUG: true
      OUTPUT_FILE_NAME: ((cert_file))
      OPSMAN_HOST: ((ops_mgr_host))
      OPSMAN_SSHPASS: ((ops_mgr_ssh_pwd))
      PARAM_NAME: ((ldap_ssl_cert))

  - task: commit-files-into-git
    image: platform-buildbox
    file: platform-automation-tasks/sandbox/tasks/commit-files-into-git/task.yml
    input_mapping:
      git-repo: state
      src-dir: generated-state
    params:
      DEBUG: ((debug))
      CI_USERNAME: ((ci_username))
      CI_EMAIL_ADDRESS: ((ci_email_address))
      GIT_COMMIT_MESSAGE: "Updated the state file"
      FOLDER_NAME: ((state_output_folder))

  - put: state
    params:
      repository: git-repo-updated

  on_failure:
    put: send-email
    params:
      subject_text: "Build failed: ${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME}"
      body_text: "Build failed: ${ATC_EXTERNAL_URL}/teams/sandbox/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"

- name: apply-changes
  plan:
  - aggregate:
    - get: platform-automation-tasks
      passed: [upgrade-ops-manager]
    - get: platform-automation-image
      passed: [upgrade-ops-manager]
    - get: platform-buildbox
      passed: [upgrade-ops-manager]
    - get: om-cli
      params:
        globs:
        - "*-linux"
    - get: jq
      params:
        globs:
        - "*linux64*"
      passed: [upgrade-ops-manager]
    - get: pivnet-product
      resource: ops-manager
      params:
        globs: []
      passed: [upgrade-ops-manager]
      trigger: true

  - task: create-opsman-env-file
    image: platform-buildbox
    file: platform-automation-tasks/sandbox/tasks/create-yml-file/task.yml
    output_mapping:
      output-folder: env
    params:
      DEBUG: ((debug))
      OUTPUT_FILE_NAME: opsman-env.yml
      PARAM_NAME: ((ops_manager_env))

  - task: create-apply-changes-config
    image: platform-automation-image
    file: platform-automation-tasks/sandbox/tasks/create-yml-file/task.yml
    output_mapping:
      output-folder: config
    params:
      DEBUG: ((debug))
      OUTPUT_FILE_NAME: apply-changes.yml
      PARAM_NAME: ((apply_changes_config))

  - task: trigger-apply-changes
    image: platform-buildbox
    file: platform-automation-tasks/sandbox/tasks/apply-filtered-changes/task.yml
    input_mapping:
      env: env
      config: config
    params:
      OPSMAN_ENV_FILE_NAME: opsman-env.yml
      APPLY_CHANGES: ((apply_changes))
      CONFIG_FILE_NAME: apply-changes.yml

  on_failure:
    put: send-email
    params:
      subject_text: "Build failed: ${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME}"
      body_text: "Build failed: ${ATC_EXTERNAL_URL}/teams/sandbox/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
